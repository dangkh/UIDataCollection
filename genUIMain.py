# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test01.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from genUICreate import Ui_Form
import json
import random
import os 
import math
from utility import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(744, 571)
        self.abc = QtWidgets.QWidget(MainWindow)
        self.abc.setObjectName("abc")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.abc)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 0, 711, 51))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_5 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout.addWidget(self.pushButton_5)
        self.pushButton_4 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout.addWidget(self.pushButton_4)
        self.pushButton_2 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout.addWidget(self.pushButton_3)
        self.pushButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.abc)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(10, 50, 711, 26))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.radioButton_4 = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.radioButton_4.setText("")
        self.radioButton_4.setObjectName("radioButton_4")
        self.horizontalLayout_2.addWidget(self.radioButton_4, 0, QtCore.Qt.AlignHCenter)
        self.radioButton_5 = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.radioButton_5.setText("")
        self.radioButton_5.setObjectName("radioButton_5")
        self.horizontalLayout_2.addWidget(self.radioButton_5, 0, QtCore.Qt.AlignHCenter)
        self.radioButton_3 = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.radioButton_3.setText("")
        self.radioButton_3.setObjectName("radioButton_3")
        self.horizontalLayout_2.addWidget(self.radioButton_3, 0, QtCore.Qt.AlignHCenter)
        self.radioButton_2 = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.radioButton_2.setText("")
        self.radioButton_2.setObjectName("radioButton_2")
        self.horizontalLayout_2.addWidget(self.radioButton_2, 0, QtCore.Qt.AlignHCenter)
        self.radioButton = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.radioButton.setText("")
        self.radioButton.setObjectName("radioButton")
        self.horizontalLayout_2.addWidget(self.radioButton, 0, QtCore.Qt.AlignHCenter)
        self.label = QtWidgets.QLabel(self.abc)
        self.label.setGeometry(QtCore.QRect(20, 80, 161, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.recordingButton = QtWidgets.QCommandLinkButton(self.abc)
        self.recordingButton.setGeometry(QtCore.QRect(610, 70, 111, 41))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("playIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.recordingButton.setIcon(icon)
        self.recordingButton.setObjectName("recordingButton")
        self.tableWidget = QtWidgets.QTableWidget(self.abc)
        self.tableWidget.setEnabled(True)
        self.tableWidget.setGeometry(QtCore.QRect(10, 110, 711, 361))
        self.tableWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.tableWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)


        self.tableWidget.setRowCount(10)
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setColumnWidth(0, 20)
        self.tableWidget.setColumnWidth(1, 100)
        self.tableWidget.setColumnWidth(2, 100)
        self.tableWidget.setColumnWidth(3, 150)
        self.tableWidget.setColumnWidth(4, 108)
        self.tableWidget.setColumnWidth(5, 102)
        self.tableWidget.setColumnWidth(6, 102)

        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        self.tableWidget.horizontalHeader().setVisible(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.abc)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(10, 480, 711, 31))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_6 = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.pushButton_6.setObjectName("pushButton_6")
        self.horizontalLayout_3.addWidget(self.pushButton_6)
        self.pushButton_7 = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.pushButton_7.setObjectName("pushButton_7")
        self.horizontalLayout_3.addWidget(self.pushButton_7)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.spinBox = QtWidgets.QSpinBox(self.horizontalLayoutWidget_3)
        self.spinBox.setObjectName("spinBox")
        self.horizontalLayout_3.addWidget(self.spinBox)
        self.GoPageBtn = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.GoPageBtn.setObjectName("GoPageBtn")
        self.horizontalLayout_3.addWidget(self.GoPageBtn)
        self.view1 = QtWidgets.QPushButton(self.abc)
        self.view1.setGeometry(QtCore.QRect(508, 132, 102, 31))
        self.view1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("editIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.view1.setIcon(icon1)
        self.view1.setObjectName("view1")
        self.view1_2 = QtWidgets.QPushButton(self.abc)
        self.view1_2.setGeometry(QtCore.QRect(508, 162, 102, 31))
        self.view1_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_2.setText("")
        self.view1_2.setIcon(icon1)
        self.view1_2.setObjectName("view1_2")
        self.view1_3 = QtWidgets.QPushButton(self.abc)
        self.view1_3.setGeometry(QtCore.QRect(508, 192, 102, 31))
        self.view1_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_3.setText("")
        self.view1_3.setIcon(icon1)
        self.view1_3.setObjectName("view1_3")
        self.view1_4 = QtWidgets.QPushButton(self.abc)
        self.view1_4.setGeometry(QtCore.QRect(508, 222, 102, 31))
        self.view1_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_4.setText("")
        self.view1_4.setIcon(icon1)
        self.view1_4.setObjectName("view1_4")
        self.view1_5 = QtWidgets.QPushButton(self.abc)
        self.view1_5.setGeometry(QtCore.QRect(508, 252, 102, 31))
        self.view1_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_5.setText("")
        self.view1_5.setIcon(icon1)
        self.view1_5.setObjectName("view1_5")
        self.view1_6 = QtWidgets.QPushButton(self.abc)
        self.view1_6.setGeometry(QtCore.QRect(508, 282, 102, 31))
        self.view1_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_6.setText("")
        self.view1_6.setIcon(icon1)
        self.view1_6.setObjectName("view1_6")
        self.view1_7 = QtWidgets.QPushButton(self.abc)
        self.view1_7.setGeometry(QtCore.QRect(508, 312, 102, 31))
        self.view1_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_7.setText("")
        self.view1_7.setIcon(icon1)
        self.view1_7.setObjectName("view1_7")
        self.view1_8 = QtWidgets.QPushButton(self.abc)
        self.view1_8.setGeometry(QtCore.QRect(508, 342, 102, 31))
        self.view1_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_8.setText("")
        self.view1_8.setIcon(icon1)
        self.view1_8.setObjectName("view1_8")
        self.view1_9 = QtWidgets.QPushButton(self.abc)
        self.view1_9.setGeometry(QtCore.QRect(508, 372, 102, 31))
        self.view1_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_9.setText("")
        self.view1_9.setIcon(icon1)
        self.view1_9.setObjectName("view1_9")
        self.view1_10 = QtWidgets.QPushButton(self.abc)
        self.view1_10.setGeometry(QtCore.QRect(508, 402, 102, 31))
        self.view1_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.view1_10.setText("")
        self.view1_10.setIcon(icon1)
        self.view1_10.setObjectName("view1_10")
        self.delete1 = QtWidgets.QPushButton(self.abc)
        self.delete1.setGeometry(QtCore.QRect(609, 132, 102, 31))
        self.delete1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("deleteIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.delete1.setIcon(icon2)
        self.delete1.setObjectName("delete1")
        self.delete1_2 = QtWidgets.QPushButton(self.abc)
        self.delete1_2.setGeometry(QtCore.QRect(609, 162, 102, 31))
        self.delete1_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_2.setText("")
        self.delete1_2.setIcon(icon2)
        self.delete1_2.setObjectName("delete1_2")
        self.delete1_3 = QtWidgets.QPushButton(self.abc)
        self.delete1_3.setGeometry(QtCore.QRect(609, 192, 102, 31))
        self.delete1_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_3.setText("")
        self.delete1_3.setIcon(icon2)
        self.delete1_3.setObjectName("delete1_3")
        self.delete1_4 = QtWidgets.QPushButton(self.abc)
        self.delete1_4.setGeometry(QtCore.QRect(609, 222, 102, 31))
        self.delete1_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_4.setText("")
        self.delete1_4.setIcon(icon2)
        self.delete1_4.setObjectName("delete1_4")
        self.delete1_5 = QtWidgets.QPushButton(self.abc)
        self.delete1_5.setGeometry(QtCore.QRect(609, 252, 102, 31))
        self.delete1_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_5.setText("")
        self.delete1_5.setIcon(icon2)
        self.delete1_5.setObjectName("delete1_5")
        self.delete1_6 = QtWidgets.QPushButton(self.abc)
        self.delete1_6.setGeometry(QtCore.QRect(609, 282, 102, 31))
        self.delete1_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_6.setText("")
        self.delete1_6.setIcon(icon2)
        self.delete1_6.setObjectName("delete1_6")
        self.delete1_7 = QtWidgets.QPushButton(self.abc)
        self.delete1_7.setGeometry(QtCore.QRect(609, 312, 102, 31))
        self.delete1_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_7.setText("")
        self.delete1_7.setIcon(icon2)
        self.delete1_7.setObjectName("delete1_7")
        self.delete1_8 = QtWidgets.QPushButton(self.abc)
        self.delete1_8.setGeometry(QtCore.QRect(609, 342, 102, 31))
        self.delete1_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_8.setText("")
        self.delete1_8.setIcon(icon2)
        self.delete1_8.setObjectName("delete1_8")
        self.delete1_9 = QtWidgets.QPushButton(self.abc)
        self.delete1_9.setGeometry(QtCore.QRect(609, 372, 102, 31))
        self.delete1_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_9.setText("")
        self.delete1_9.setIcon(icon2)
        self.delete1_9.setObjectName("delete1_9")
        self.delete1_10 = QtWidgets.QPushButton(self.abc)
        self.delete1_10.setGeometry(QtCore.QRect(609, 402, 102, 31))
        self.delete1_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_10.setText("")
        self.delete1_10.setIcon(icon2)
        self.delete1_10.setObjectName("delete1_10")
        self.delete1_11 = QtWidgets.QPushButton(self.abc)
        self.delete1_11.setGeometry(QtCore.QRect(510, 440, 201, 31))
        self.delete1_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete1_11.setIcon(icon2)
        self.delete1_11.setObjectName("delete1_11")
        MainWindow.setCentralWidget(self.abc)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 744, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.menuFile.addAction(self.actionClose)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.recordingButton.clicked.connect(self.recordingScreen)

        # data processes
        self.listViewBtn = [self.view1, self.view1_2, self.view1_3, self.view1_4, self.view1_5, self.view1_6, self.view1_7, self.view1_8
        , self.view1_9, self.view1_10]
        self.listDelBtn = [self.delete1, self.delete1_2, self.delete1_3, self.delete1_4, self.delete1_5, self.delete1_6, self.delete1_7
        , self.delete1_8, self.delete1_9, self.delete1_10]
        self.jsonFiles = readData()
        self.loadData2Table()


        # page move 
        self.GoPageBtn.clicked.connect(lambda: self.goPage(self.spinBox.value()))
        self.pushButton_6.clicked.connect(lambda: self.goPage(self.current_page-1))
        self.pushButton_7.clicked.connect(lambda: self.goPage(self.current_page+1))

        # delete btn

        self.delete1.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: ", self.current_page * 10+0))
        self.delete1_2.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+1))
        self.delete1_3.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+2))
        self.delete1_4.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+3))
        self.delete1_5.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+4))
        self.delete1_6.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+5))
        self.delete1_7.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+6))
        self.delete1_8.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+7))
        self.delete1_9.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+8))
        self.delete1_10.clicked.connect(lambda: self.showChoosePopup("Do you want to delete: " , self.current_page * 10+9))

        # view btn
        self.view1.clicked.connect(lambda: self.viewFunction(self.current_page * 10+0))
        self.view1_2.clicked.connect(lambda: self.viewFunction(self.current_page * 10+1))
        self.view1_3.clicked.connect(lambda: self.viewFunction(self.current_page * 10+2))
        self.view1_4.clicked.connect(lambda: self.viewFunction(self.current_page * 10+3))
        self.view1_5.clicked.connect(lambda: self.viewFunction(self.current_page * 10+4))
        self.view1_6.clicked.connect(lambda: self.viewFunction(self.current_page * 10+5))
        self.view1_7.clicked.connect(lambda: self.viewFunction(self.current_page * 10+6))
        self.view1_8.clicked.connect(lambda: self.viewFunction(self.current_page * 10+7))
        self.view1_9.clicked.connect(lambda: self.viewFunction(self.current_page * 10+8))
        self.view1_10.clicked.connect(lambda: self.viewFunction(self.current_page * 10+9))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_5.setText(_translate("MainWindow", "Máy thu tín hiệu"))
        self.pushButton_4.setText(_translate("MainWindow", "ET"))
        self.pushButton_2.setText(_translate("MainWindow", "EEG"))
        self.pushButton_3.setText(_translate("MainWindow", "CAM1"))
        self.pushButton.setText(_translate("MainWindow", "CAM2"))
        self.label.setText(_translate("MainWindow", "Danh sách bản ghi"))
        self.recordingButton.setText(_translate("MainWindow", "Recording "))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.tableWidget.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.tableWidget.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.tableWidget.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.tableWidget.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "STT"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Mã bản ghi"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Kịch bản"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Họ tên đối tượng"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Thời gian ghi"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Xem"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Xóa"))
        self.pushButton_6.setText(_translate("MainWindow", "previous page"))
        self.pushButton_7.setText(_translate("MainWindow", "next page"))
        self.GoPageBtn.setText(_translate("MainWindow", "Go"))
        self.delete1_11.setText(_translate("MainWindow", "Xóa toàn bộ ?"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionClose.setText(_translate("MainWindow", "Close"))


    def loadData2Table(self):
        current_page = self.spinBox.value()
        idxL = current_page * 10
        listShow = self.jsonFiles[idxL:idxL+10]
        # readJson
        self.listData = []
        for row, file in enumerate(listShow):
            with open(file) as json_file:
                data = json.load(json_file)
                self.listData.append(data)
            # print(data)
            self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str(row + idxL)))
            self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(str(data['id'])))
            self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(str(data['recPlan'])))
            self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(data['name']))
            self.tableWidget.setItem(row, 4, QtWidgets.QTableWidgetItem(data['time']))
        if len(listShow) < 10:
            for row in range(len(listShow), 10):
                self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str('')))
                self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(str('')))
                self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(str('')))
                self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(str('')))
                self.tableWidget.setItem(row, 4, QtWidgets.QTableWidgetItem(str('')))
                self.listViewBtn[row].setEnabled(False)
                self.listDelBtn[row].setEnabled(False)
        self.spinBox.setValue(current_page)
        numberPage = math.ceil(len(self.jsonFiles) / 10)
        self.spinBox.setMaximum(numberPage-1)
        self.current_page = current_page


    def recordingScreen(self):
        self.Form = QtWidgets.QWidget()
        self.uiForm = Ui_Form()
        self.uiForm.setupUi(self.Form)
        self.Form.show()
        self.uiForm.LoadBtn.clicked.connect(self.visualData)
        self.uiForm.SaveBtn.clicked.connect(self.createData)

    def visualData(self):
        self.uiForm.extendSize(self.Form)
        # **********************************Mr_HOA*******************************
        # load Data
        # **********************************Mr_HOA*******************************

        # create Gif
        EEGData = readFile("./exampleEEG")
        EEGData = EEGData.astype(float)
        EEGData = EEGData[3:17,:].T
        
        self.uiForm.addGif(self.Form)
        self.uiForm.LoadBtn.setText("Reload")        

    def showErrorPopup(self, error):
        msg  = QtWidgets.QMessageBox()
        msg.setText(str(error))
        x = msg.exec_()

    def showChoosePopup(self, error, pos):
        msg  = QtWidgets.QMessageBox()
        msg.setText(str(error) + str(self.jsonFiles[pos]))
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)
        self.ChoosePopupParam = pos
        msg.buttonClicked.connect(self.choosedInMsg)
        x = msg.exec_()
    
    def choosedInMsg(self, i):
        if i.text() == "OK":
            self.delItem(self.ChoosePopupParam)


    def createData(self):
        name = self.uiForm.NameEdit.text()
        age = self.uiForm.AgeEdit.value()
        genderG = self.uiForm.FemaleEdit.isChecked()
        genderM = self.uiForm.MaleEdit.isChecked()
        patientDesc = self.uiForm.DiseaseDescEdit.toPlainText()
        recorder = self.uiForm.RecorderEdit.text()
        location = self.uiForm.LocateEdit.text()
        recPlan = self.uiForm.RecPlanEdit.value()
        timeTmp = self.uiForm.dateTimeEdit.dateTime()
        # dt.toString("dd.MM.yyyy hh:mm:ss.zzz"))
        time_string = timeTmp.toString(self.uiForm.dateTimeEdit.displayFormat())
        # check avalibale
        missingValue = False
        if name == '' or patientDesc == '' or recorder == '' or location == '':
            missingValue = True
        elif not genderG and not genderM : 
            missingValue = True
        elif age == 0 or recPlan == 0:
            missingValue = True
        if not missingValue:
            gender = "M"
            if genderG:
                gender = "Fm"
            # get ID 
            recordID = random.randint(1, 100)
            js = {
            'id': recordID,
            'name' : name, 
            'age' : age, 
            'gender': gender, 
            'patientDesc': patientDesc, 
            'recorder' : recorder, 
            'location' : location, 
            'recPlan' : recPlan, 
            'time' : time_string
            }
            fileName = './dataVIN/data' + str(recordID) + '.json'
            self.jsonFiles.append(fileName)
            with open(fileName, 'w') as outfile:
                json.dump(js, outfile)
            print('success')
            self.Form.close()
            self.refreshPage(math.ceil(len(self.jsonFiles) / 10)-1)
        else:
            self.showErrorPopup("Please complete fully the form")

    def goPage(self, pos):
        print(pos)
        numberPage = math.ceil(len(self.jsonFiles) / 10)
        print(numberPage)
        if pos >= numberPage or pos < 0:
            self.showErrorPopup("Out of number page: " + str(pos))
        else:
            self.refreshPage(pos)

    def refreshPage(self, pageNum):
        idxL = pageNum * 10
        listShow = self.jsonFiles[idxL:idxL+10]
        # readJson
        self.listData = []
        for row, file in enumerate(listShow):
            with open(file) as json_file:
                data = json.load(json_file)
                self.listData.append(data)
            # print(data)
            self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str(row + idxL)))
            self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(str(data['id'])))
            self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(str(data['recPlan'])))
            self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(data['name']))
            self.tableWidget.setItem(row, 4, QtWidgets.QTableWidgetItem(data['time']))
            self.listViewBtn[row].setEnabled(True)
            self.listDelBtn[row].setEnabled(True)
        if len(listShow) < 10:
            for row in range(len(listShow), 10):
                self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str('')))
                self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(str('')))
                self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(str('')))
                self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(str('')))
                self.tableWidget.setItem(row, 4, QtWidgets.QTableWidgetItem(str('')))
                self.listViewBtn[row].setEnabled(False)
                self.listDelBtn[row].setEnabled(False)
        self.spinBox.setValue(pageNum)
        numberPage = math.ceil(len(self.jsonFiles) / 10)
        self.spinBox.setMaximum(numberPage-1)
        self.current_page = pageNum

    def delItem(self, pos):
        os.remove(self.jsonFiles[pos])
        del self.jsonFiles[pos]
        numberPage = math.ceil(len(self.jsonFiles) / 10)
        futurePage = self.current_page if self.current_page <= numberPage-1 else numberPage-1
        self.goPage(futurePage)

    def viewFunction(self, pos):
        file = self.jsonFiles[pos]
        with open(file) as json_file:
            data = json.load(json_file)
        print(data)

        self.Form = QtWidgets.QWidget()
        self.uiForm = Ui_Form()
        self.uiForm.setupUi(self.Form)
        self.uiForm.extendSize(self.Form)

        self.uiForm.label_2.setEnabled(False)
        self.uiForm.label_4.setEnabled(False)
        self.uiForm.label_5.setEnabled(False)
        self.uiForm.label_6.setEnabled(False)
        
        self.uiForm.label_8.setEnabled(False)
        self.uiForm.label_9.setEnabled(False)
        self.uiForm.label_10.setEnabled(False)
        self.uiForm.label_11.setEnabled(False)
        self.uiForm.label_7.setEnabled(False)
        self.uiForm.LoadBtn.setEnabled(False)
        self.uiForm.SaveBtn.setEnabled(False)

        self.uiForm.NameEdit.setText(data['name'])
        self.uiForm.NameEdit.setEnabled(False)
        self.uiForm.AgeEdit.setValue(data['age'])
        self.uiForm.AgeEdit.setEnabled(False)
        if data['gender'] == 'M':
            self.uiForm.MaleEdit.setChecked(True)
        else:
            self.uiForm.FemaleEdit.setChecked(True)
        self.uiForm.MaleEdit.setEnabled(False)
        self.uiForm.FemaleEdit.setEnabled(False)
        self.uiForm.DiseaseDescEdit.setText(data['patientDesc'])
        self.uiForm.DiseaseDescEdit.setEnabled(False)
        self.uiForm.RecorderEdit.setText(data['recorder'])
        self.uiForm.RecorderEdit.setEnabled(False)
        self.uiForm.LocateEdit.setText(data['location'])
        self.uiForm.LocateEdit.setEnabled(False)
        self.uiForm.RecPlanEdit.setValue(data['recPlan'])
        self.uiForm.RecPlanEdit.setEnabled(False)
        dataTime = QtCore.QDateTime.fromString(data['time'], 'd/M/yyyy hh:mm')
        self.uiForm.dateTimeEdit.setDateTime(dataTime)
        self.uiForm.dateTimeEdit.setEnabled(False)
        # load gif
        self.Form.show()


def readData(link = "./DataVIN/", prefixName = "Data"):
    if os.path.isdir(link):
        onlyfiles = [f for f in os.listdir(link) if os.path.isfile(link+f)]
        jsonFiles = [link+x for x in onlyfiles if x[-4:] == 'json']
        # print(jsonFiles)
    else:
        print("imported link is not exist")
        print("DataVIN folder is created, run again!")
        os.mkdir(link)
        onlyfiles = [f for f in os.listdir(link) if os.path.isfile(link+f)]
        jsonFiles = [link+x for x in onlyfiles if x[-4:] == 'json']
        # print(jsonFiles)
    return jsonFiles



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
