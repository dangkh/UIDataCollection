# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainWindow3.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1494, 866)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 1481, 571))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.subjectWidget = QtWidgets.QWidget(self.horizontalLayoutWidget)
        self.subjectWidget.setStyleSheet("background-color: rgb(204, 204, 204);")
        self.subjectWidget.setObjectName("subjectWidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.subjectWidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(140, 50, 481, 251))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout.addLayout(self.gridLayout)
        # spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        # self.verticalLayout.addItem(spacerItem)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_2.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_2.addWidget(self.pushButton_2)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.pushButton_3 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_2.addWidget(self.pushButton_3)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout.addWidget(self.subjectWidget)
        self.sampleWidget = QtWidgets.QWidget(self.horizontalLayoutWidget)
        self.sampleWidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.sampleWidget.setObjectName("sampleWidget")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.sampleWidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(30, 60, 481, 251))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalSample = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalSample.setContentsMargins(0, 0, 0, 0)
        self.verticalSample.setObjectName("verticalSample")
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_2.setObjectName("label_2")
        self.verticalSample.addWidget(self.label_2)
        self.gridLayout_sample = QtWidgets.QGridLayout()
        self.gridLayout_sample.setObjectName("gridLayout_sample")
        self.verticalSample.addLayout(self.gridLayout_sample)
        # spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        # self.verticalSample.addItem(spacerItem2)
        self.horizontalLayout_sample = QtWidgets.QHBoxLayout()
        self.horizontalLayout_sample.setObjectName("horizontalLayout_sample")
        self.pushButton_5 = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout_sample.addWidget(self.pushButton_5)
        self.pushButton_6 = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.pushButton_6.setObjectName("pushButton_6")
        self.horizontalLayout_sample.addWidget(self.pushButton_6)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_sample.addItem(spacerItem3)
        self.pushButton_7 = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.pushButton_7.setObjectName("pushButton_7")
        self.horizontalLayout_sample.addWidget(self.pushButton_7)
        self.verticalSample.addLayout(self.horizontalLayout_sample)
        self.horizontalLayout.addWidget(self.sampleWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1494, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.subjectWidget.setLayout(self.verticalLayout)
        self.sampleWidget.setLayout(self.verticalSample)

        self.createEvent()

    def createEvent(self):
        self.listSub = []
        self.listDirSub = readStorageData()
        self.currentPage = 0
        counter = 0
        numSub = self.collectID(0)
        showDir = self.listDirSub[self.currentPage * 16:self.currentPage * 16 + 16]
        for x in range(4):
            for y in range(4):
                newSubject = QtWidgets.QWidget(self.centralwidget)
                newSubject.setObjectName("newSubject" + str(x) + str(y))
                subInfo = QtWidgets.QVBoxLayout(newSubject)
                subInfo.setContentsMargins(0, 0, 0, 0)
                subInfo.setObjectName("subInfo" + str(x) + str(y))
                subBtn = QtWidgets.QPushButton(newSubject)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(subBtn.sizePolicy().hasHeightForWidth())
                subBtn.setSizePolicy(sizePolicy)
                subBtn.setStyleSheet("background-color: rgba(255,255,255,0);border: 0px;")
                subBtn.setText("")
                icon = QtGui.QIcon()
                icon.addPixmap(QtGui.QPixmap("folder-blue-512.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                subBtn.setIcon(icon)
                subBtn.setIconSize(QtCore.QSize(50, 50))
                subBtn.setObjectName("subBtn" + str(x) + str(y))
                subInfo.addWidget(subBtn)
                subLabel = QtWidgets.QLabel(newSubject)
                subLabel.setObjectName("subLabel" + str(x) + str(y))
                subLabel.setText("")
                subInfo.addWidget(subLabel, 0, QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                subInfo.setStretch(0, 4)
                subInfo.setStretch(1, 1)
                self.listSub.append([newSubject, subInfo, subBtn, subLabel, x, y])
                self.gridLayout.addWidget(newSubject, x, y)
                if counter >= len(self.listDirSub):
                    newSubject.setEnabled(False)
                else:
                    subLabel.setText(str(showDir[counter]))
                counter += 1

        for x in self.listSub:
            x[2].clicked.connect(self.eventTODO(x))

        self.updateSam()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        widget = QtWidgets.QWidget()
        widget.setLayout(self.horizontalLayout)
        MainWindow.setCentralWidget(widget)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Danh sách người bệnh"))
        self.pushButton.setText(_translate("MainWindow", "Previous"))
        self.pushButton_2.setText(_translate("MainWindow", "Next"))
        self.pushButton_3.setText(_translate("MainWindow", "New"))
        self.label_2.setText(_translate("MainWindow", "Danh sách bản ghi"))
        self.pushButton_5.setText(_translate("MainWindow", "Previous"))
        self.pushButton_6.setText(_translate("MainWindow", "Next"))
        self.pushButton_7.setText(_translate("MainWindow", "New"))
        # self.nameSubject.setText(_translate("MainWindow", "Người bệnh + ID"))
        # self.nameSample.setText(_translate("MainWindow", "Tên file"))

    def collectID(self, page=0):
        return 0

    def updateSam(self, arg):
        print("Updating Sam")
        print(arg)

        if os.path.isdir(arg):
            onlydir = [arg + "/" + d for d in os.listdir(arg) if os.path.isdir(arg + "/" + d)]
            print(onlydir)
        else:
            print("Error in link Sub")
        onlydir.sort(key=os.path.getctime)
        self.superUpdateSam(listdir = onlydir)

    def superUpdateSam(self, listdir = [], page = 0):
        self.listDirSam = listdir
        self.currentSamPage = page
        showDirSam = self.listDirSam[self.currentSamPage * 16:self.currentSamPage * 16 + 16]
        counter = 0
        for x in range(4):
            for y in range(4):
                newSam = QtWidgets.QWidget(self.centralwidget)
                newSam.setObjectName("newSample" + str(x) + str(y))
                samInfo = QtWidgets.QVBoxLayout(newSam)
                samInfo.setContentsMargins(0, 0, 0, 0)
                samInfo.setObjectName("samInfo" + str(x) + str(y))
                samBtn = QtWidgets.QPushButton(newSam)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(samBtn.sizePolicy().hasHeightForWidth())
                samBtn.setSizePolicy(sizePolicy)
                samBtn.setStyleSheet("background-color: rgba(255,255,255,0);border: 0px;")
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap("file.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                samBtn.setIcon(icon1)
                samBtn.setIconSize(QtCore.QSize(50, 50))
                samBtn.setObjectName("samBtn" + str(x) + str(y))
                samInfo.addWidget(samBtn)
                samLabel = QtWidgets.QLabel(newSam)
                samLabel.setObjectName("samLabel" + str(x) + str(y))
                samLabel.setText("")
                samInfo.addWidget(samLabel, 0, QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                samInfo.setStretch(0, 4)
                samInfo.setStretch(1, 1)
                # self.listDirSam.append([newSam, samInfo, samBtn, samLabel])
                super().gridLayout_sample.addWidget(newSam, x, y)
                newSam.setEnabled(False)
                if counter >= len(super().listDirSam):
                    newSam.setEnabled(False)
                else:
                    samLabel.setText(str(showDirSam[counter]))
                    # Subject.setDir(str(showDir[counter]))
                counter += 1

    def updateSam(self, listDir = [], page = 0):
        self.listDirSam = listdir
        self.currentSamPage = page
        showDirSam = self.listDirSam[self.currentSamPage * 16:self.currentSamPage * 16 + 16]
        counter = 0
        for x in range(4):
            for y in range(4):
                newSam = QtWidgets.QWidget(self.centralwidget)
                newSam.setObjectName("newSample" + str(x) + str(y))
                samInfo = QtWidgets.QVBoxLayout(newSam)
                samInfo.setContentsMargins(0, 0, 0, 0)
                samInfo.setObjectName("samInfo" + str(x) + str(y))
                samBtn = QtWidgets.QPushButton(newSam)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(samBtn.sizePolicy().hasHeightForWidth())
                samBtn.setSizePolicy(sizePolicy)
                samBtn.setStyleSheet("background-color: rgba(255,255,255,0);border: 0px;")
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap("file.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                samBtn.setIcon(icon1)
                samBtn.setIconSize(QtCore.QSize(50, 50))
                samBtn.setObjectName("samBtn" + str(x) + str(y))
                samInfo.addWidget(samBtn)
                samLabel = QtWidgets.QLabel(newSam)
                samLabel.setObjectName("samLabel" + str(x) + str(y))
                samLabel.setText("")
                samInfo.addWidget(samLabel, 0, QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                samInfo.setStretch(0, 4)
                samInfo.setStretch(1, 1)
                self.gridLayout_sample.addWidget(newSam, x, y)
                newSam.setEnabled(False)
                if counter >= len(showDirSam):
                    newSam.setEnabled(False)
                else:
                    samLabel.setText(str(showDirSam[counter]))
                counter += 1

    def eventTODO(self, arg):
        def wrap():
            print(arg[-1], arg[-2])
        return wrap


def readStorageData(link="./DataVIN/"):
    if os.path.isdir(link):
        onlydir = [link + d for d in os.listdir(link) if os.path.isdir(link + d)]
    else:
        print("imported link is not exist")
        print("DataVIN folder is created, run again!")
        os.mkdir(link)
    onlydir.sort(key=os.path.getctime)
    return onlydir


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
