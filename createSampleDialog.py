# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'createSample.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtWidgets import *
from arguments import arg


class SampleDialog(QtWidgets.QDialog):
    def setupUi(self):
        uic.loadUi('UiFiles/createSample.ui', self)

        # self.retranslateUi()
        # QtCore.QMetaObject.connectSlotsByName(self.Dialog)
        self.resize(int(1500 * arg.wScale), int(850 * arg.hScale))
        self.createEvent()

    def createEvent(self):
        # self.infoWidget.setLayout(self.verticalLayout)
        self.visualDatWidget.setLayout(self.layoutVisual)
        # self.widSignal.setLayout(self.gLayoutSignal)
        self.setLayout(self.horizontalLayout)
        # self.eventCreateBtn.clicked.connect(lambda: self.changeStyle(self.eventCreateBtn))
        self.recordingStt = True

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Dialog", "Tạo bản ghi mới"))
        self.label.setText(_translate("Dialog", "Thông tin người thu"))
        self.label_4.setText(_translate("Dialog", "Họ tên người bệnh"))
        self.label_5.setText(_translate("Dialog", "Tuổi"))
        self.label_6.setText(_translate("Dialog", "Giới tính"))
        self.MaleEdit.setText(_translate("Dialog", "Nam"))
        self.FemaleEdit.setText(_translate("Dialog", "Nữ"))
        self.label_8.setText(_translate("Dialog", "Thông tin kịch bản thu"))
        self.label_11.setText(_translate("Dialog", "Kỹ thuật viên"))
        self.label_12.setText(_translate("Dialog", "Địa điểm"))
        self.label_13.setText(_translate("Dialog", "Kịch bản"))
        self.fetchInfoBtn.setText(_translate("Dialog", "Lây thông tin cũ"))
        self.resetBtn.setText(_translate("Dialog", "Xóa thông tin"))
        self.label_CAM2.setText(_translate("Dialog", "CAM2"))
        self.label_CAM1.setText(_translate("Dialog", "CAM1"))
        self.label_ET.setText(_translate("Dialog", "ET"))
        self.label_EEG.setText(_translate("Dialog", "EEG"))
        self.position.setText(_translate("Dialog", "NONE"))
        self.character.setText(_translate("Dialog", "NONE"))
        self.timerLabel.setText(_translate("Dialog", "Timer"))
        self.timerNumberLabel.setText(_translate("Dialog", "0s"))
        self.turnOnOffBtn.setText(_translate("Dialog", "Thoát"))
        self.rcdBtn.setText(_translate("Dialog", "Record"))
        self.ThinkButton.setText(_translate("Dialog", "Thinking"))
        self.ThinkActButton.setText(_translate("Dialog", "Acting"))
        self.TypeButton.setText(_translate("Dialog", "Typing"))

    def closeEvent(self, event):
        print("recordingStt: ", self.recordingStt)
        if not self.recordingStt:
            print("QUIT")
            event.accept()
            self.close()
        else:
            self.showErrorPopup("Hãy ấn Tắt nếu muốn đóng cửa sổ này")
            event.ignore()

        # super(Sample_Dialog, self).quitTimer()

    def showErrorPopup(self, error):
        msg = QtWidgets.QMessageBox()
        msg.setText(str(error))
        msg.exec_()

    def forceQuit(self):
        self.recordingStt = False
        self.close()


class textSpinBox(QSpinBox):
    def __init__(self, parent=None):
        super(textSpinBox, self).__init__(parent)
        self.set_list_string()

    def set_list_string(self, strings=None):
        if strings is not None:
            self.list_text = strings
        else:
            self.list_text = ["Khỏe", "Bình thường", "Yếu"]
        self.setRange(0, len(self.list_text) - 1)

    def textFromValue(self, value):
        return self.list_text[value]


# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     ui = Sample_Dialog()
#     ui.setupUi()
#     ui.show()
#     sys.exit(app.exec_())
